#include <iostream>
#include <cstdlib>
#include <iomanip>
#include <ctime>
#include <cmath>
#include <string>

using namespace std;

int numOfDaysInAMonth (int);
void printHeader (int);
void printMonth (int);
void skipToDay (int);
int year;

/**************************************************************************/
/* Checks clock tics on the pc since January 1 since 1970                 */
/**************************************************************************/

int checkYear()
{
    int currentYear;
    time_t currentTime;
    struct tm *localTime;

    time( &currentTime );                   // Get the current time
    localTime = localtime( &currentTime );

    currentYear = localTime->tm_year + 1900;
    return(currentYear);
}

/**************************************************************************/
/* Checks clock tics on the pc since January 1 since 1970                 */
/**************************************************************************/

int checkMonth()
{
    int currentMonthcheck;
    time_t currentTime;
    struct tm *localTime;

    time( &currentTime);
    localTime = localtime( &currentTime);

    currentMonthcheck = localTime ->tm_mon +1;
    return (currentMonthcheck);
}

/**************************************************************************/
/* Zeller's Algorithm                                                     */
/* Checks day of a month and outputs whether it is monday, sunday etc.    */
/**************************************************************************/

int dayNumber(int m, int d, int y) {
    if (m == 1 || m == 2) {
        m = m + 12;
        y = y - 1;
    }
    return (d + (int)floor((13 * (m + 1)) / 5) + y%100 + (int)floor((y%100)/ 4) + (int)floor(((int)floor(y/100))/4) + 5*(int)floor(y/100)) % 7;
}

/**************************************************************************/
/* The main algorithm for the calendar program                            */
/**************************************************************************/

int main ()
{
    int currentMonth = 1;
    int numDays;

    year = checkYear();
    cout << endl;

    cout << " Year: " << year << endl;

    while (currentMonth <= 12)
    {
        numDays = numOfDaysInAMonth(currentMonth);
        if (currentMonth == checkMonth())
        {
            printHeader(checkMonth());
            printMonth(numDays);
        }
        currentMonth++;
    }

    cout << endl;

    return 0;

}

/**************************************************************************/
/* Function to check for leap years.                                      */
/**************************************************************************/

bool leapYearCheck()
{
    bool leapYear;
    if ( ((year % 4) == 0) && ((year % 100) != 0) )
    	{
    	leapYear = true;
    	}
    else if ((year % 400) == 0)
    	{
    	leapYear = true;
    	}
    else
    	{
    	leapYear = false;
    	}
    return leapYear;
}

/**************************************************************************/
/* This function returns the number of days in a month                    */
/**************************************************************************/

    //currentMonth = m (two different integers, but they are the same value
    //This is to make sure that we don't have a big load of the same integers
    //Since these functions, voids and so on, are like a seperate main functions).
    int numOfDaysInAMonth (int m){
        if (m == 1)
           return(31);
        else if ((m == 2) && (leapYearCheck() == false))
             return(28);
        else if ((m == 2) && (leapYearCheck() == true))
            return(29);
        else if (m == 3)
             return(31);
        else if (m == 4)
             return(30);
        else if (m == 5)
             return(31);
        else if (m == 6)
             return(30);
        else if (m == 7)
             return(31);
        else if (m == 8)
            return(31);
        else if (m == 9)
            return(30);
        else if (m == 10)
            return(31);
        else if (m == 11)
            return(30);
        else if (m == 12)
            return(31);
    }

/**************************************************************************/
/*    It takes the number of the month and prints outs the name of the    */
/*  month and the frame of the calander                                   */
/**************************************************************************/

    void printHeader (int m) {
        if (m == 1){

    cout << " January" << endl;
    }
    else if (m == 2) {
         cout << " February" << endl; }
    else if (m == 3) {
         cout << " March" << endl; }
    else if (m == 4) {
         cout << " April" << endl; }
    else if (m == 5) {
         cout << " May" << endl; }
    else if (m == 6) {
         cout << " June" << endl; }
    else if (m == 7) {
         cout << " July" << endl; }
    else if (m == 8) {
         cout << " August" << endl; }
    else if (m == 9) {
         cout << " September" << endl; }
    else if (m == 10) {
         cout << " October" << endl; }
    else if (m == 11) {
         cout << " November" << endl; }
    else if (m == 12) {
         cout << " December" << endl; }


    cout << " S  M  T  W  T  F  S" <<endl;
    cout << "____________________" << endl;
    }

/**************************************************************************/
/* Helps with the skipToDay function                                      */
/**************************************************************************/

    void skip (int i) {
        while (i > 0) {
            cout << " ";
            i = i - 1;
        }
    }
/**************************************************************************/
/* This function prints out the days in the month after the header for    */
/* each month                                                             */
/**************************************************************************/

    void printMonth (int numDays) {
        int day = 1;
        int weekDay;

        weekDay = dayNumber(checkMonth(),01,checkYear()) - 1; // -1 because Zeller's algorithm goes from 1 to 7 while the function works from 0 to 6.

        skipToDay(weekDay);
        while (day <= numDays) {
            cout << setw(2) << day << " ";
            if (weekDay == 6){
                cout << endl;
                weekDay = 0;
            }
            else weekDay++;
            day++;
        }
    }

/**************************************************************************/
/* Prints spaces in monthly calendar                                      */
/**************************************************************************/

    void skipToDay (int d){
        return skip(3*d);
    }
